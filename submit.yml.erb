<%-
  cores = num_cores.to_i

  if cores == 0 && cluster == "pitzer"
    # little optimization for pitzer nodes. They want the whole node, if they chose 'any',
    # it can be scheduled on p18 or p20 nodes. If not, they'll get the constraint below.
    base_slurm_args = ["--nodes", "1", "--exclusive"]
  elsif cores == 0
    # full node on owens
    cores = 28
    base_slurm_args = ["--nodes", "1", "--ntasks-per-node", "28"]
  else
    base_slurm_args = ["--nodes", "1", "--ntasks-per-node", "#{cores}"]
  end

  slurm_args = case node_type
              when "gpu"
                base_slurm_args + ["--gpus-per-node", "1"]
              when "gpu-40core"
                base_slurm_args + ["--gpus-per-node", "1", "--constraint", "40core"]
              when "gpu-48core"
                base_slurm_args + ["--gpus-per-node", "1", "--constraint", "48core"]
              when "any-40core"
                base_slurm_args + ["--constraint", "40core"]
              when "any-48core"
                base_slurm_args + ["--constraint", "48core"]
              when "hugemem"
                base_slurm_args + ["--partition", "hugemem", "--exclusive"]
              when "largemem"
                base_slurm_args + ["--partition", "largemem", "--exclusive"]
              when "debug"
                base_slurm_args += ["--partition", "debug", "--exclusive"]
              else
                base_slurm_args
              end

-%>
---
batch_connect:
  template: "basic"
  conn_params:
    - jupyter_api
script:
  accounting_id: "<%= account %>"
  native:
    <%- slurm_args.each do |arg| %>
    - "<%= arg %>"
    <%- end %>
